// 230529_1 рекурсия
//
// самый эффективный и быстрый алгоритм сортировки - рекурсивный алгоритм "быстрой сортировки": смысл такой
//
// А - опорный элемент массива, делим на меньшие и большие, если подмассив >= 2, то также делим на подмассивы с опорным элементом и т.д.
// обычно за опорный берется элемент посередине
//
// 1) a[0]...a[N]
// p - опорный элемент
// i и j - индексы левого и правого концов последовательности.
// 2) Двигаем i с шагом 1 по направлению к концу массива
// пока не найдем a[i] >= p
// 3) Аналогично двигаем j с шагом 1 по направлению к началу массива
// пока не найдем a[i] <= p
// 4) Если i <= j, то меняем a[i] и a[j] местами
// 5) повторяем шаг 3) пока i <= j
//
// Пример
// <4> 9  7  6  2  3 <8>
//  4 <9> 7  6  2 <3> 8
//  4  3 <7> 6 <2> 9  8
//  4  3  2 |6| 7  9  8 
// Массив поделён на две части
// Левая - элементы меньше опорного
// Правая - элементы больше опорного
// 
// Реализация алгоритма

#include <iostream>

using namespace std;

int RandInt(int min, int max)
{
	return min + rand() % (max - min) + 1;
}

void FillArray(int ar[], int size)
{
	for (int i = 0; i < size; i++)
	{
		ar[i] = RandInt(1, 1000);
	}
}

void ShowArray(int ar[], int size)
{
	for (int i = 0; i < size; i++)
		cout << ar[i] << " ";
	cout << endl;
}

int main()
{
	setlocale(LC_ALL, "Rus");

	return 0;
}