// 230601_(указатели2)
//
//передача аргументов в функцию по их указателю
//
//стандартно в функцию в с++ передается копия значения
// при возникновении необходимости изменения значений используются указатели
//
//NULL, NULLptr 
//
// при использовании неинициализированного указателя, его нужно изначально приравнять к нулю (NULL).
// 0 писать не нужно, т.к. это числовое значение, вместо него используем NULL - псевдоним для числа 0, NULLPTК - специальное значение, которое обозначает пустой адрес
//поэтому правильнее писать так, чтобы не было непредсказуемого значения


#include <iostream>

using namespace std;

//смена местами значений

template <typename T>
void Swap(T x, T y)
{
	T temp;
	temp = x;
	x = y;
	y = temp;

}

template <typename T>
void Swap2(T* px, T* py)
{
	T temp;
	temp = *px;
	*px = *py;
	*py = temp;

}


int main()
{
	int a = 5, b = 7;
	Swap(a, b);//при выходе из функции значения уничтожаются, поэтому обмен не происходит
	cout << "a= " << a << " b= " << b << "\n";

	Swap2(&a, &b);//для указателей всё работает и обмен происходит
	cout << "a= " << a << " b= " << b << "\n";

	//int* p = 0;// 0 писать не нужно, т.к. это числовое значение, вместо него используем NULL - псевдоним для числа 0, NULLPTК - специальное значение, которое обозначает пустой адрес
	//поэтому правильнее писать так, чтобы не было непредсказуемого значения
	int* p = nullptr;
	if (p != nullptr)
	{

	}

}

