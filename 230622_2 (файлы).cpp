// 230622_2 (файлы)
// 
// имя файла состоит из названия файла и расширения (*.*)
// расширения могут быть любой длины, но традиционно 2-3 символа
// имя файла лежит во внешней памяти, а не в оперативной
// полное имя = путь файла от корня
// относительный путь = относительно папки в которой находится
// все действия с файлами выполняются через механизм потоков: принтер, клавиатура, файл - это потоки
// данные передаются через буфер
// для работы с файлами понадобятся бинарные потоки
// стандартная библиотека STDIO.h
// альтернативные библиотеки fstream, ifstream, ofstream
// после завершения работы с файлами его нужно закрыть, т.к. доступ к файлу не восстановится
// доступ к файлу осущ с помощью указателя на структуру файла
 

#include <iostream>
#include <stdio.h>


int main()
{
	const int n = 5;
	int arr[n];
	const char* path = "D:\\Климов\\mytext.txt";
	FILE *f;// доступ к файлу осущ с помощью указателя на структуру файла
	for (int i = 0; i < n; i++)
	{
		arr[i] = i + 5;
	}
	if ((fopen_s(&f, path, "w")) != NULL)// mytext.txt - файл будет создан только в папке где программа, 
		//fopen("D:\\Климов\\mytext.txt", "w") - запишется в указанную папку - fopen небезопасно для других компиляторов
		//fopen_s(&f,"mytext.txt", "w")) == NULL) - fopen_s более безопасная запись для других компиляторов
	{
		cout << "File couldn't be created! " << endl;
	}
	else
	{
		char* str; int a;
		//fscanf(f,"%s%d", &a) - считывает данные из файла (f - указатель, "%s(строка)%d(число)" - формат, &a - куда записываем файл)
		//cout << "OK!" << endl;
		for (int i = 0; i < n; i++)
		{
			fprintf(f, "%1d", arr[i]);
			fprintf(f, "\n");
		}
		if (fclose(f) == EOF)// End Of File (EOF)
		{
			cout << "File couldn't be closed " << endl;
		}
		else
		{
			cout << "File was closed " << endl;

		}
	}
///*	потоки ввода : с клавиатуры, вывода - в консоль
//	r - открытие текстового файла только для чтения (если файла не сущ - ошибка )
//	w - открытие текстового файла для записи (если файл не сущ - будет создан, если сущ - содержимое будет перезаписано)
//	a - открытие текстового файла для добавления (если файл не сущ - будет создан, если сущ - содержимое будет дозаписано в конец файла)
//	r+ - открытие текстового файла для чтения и записи без изменения размера
//	w+ - открытие текстового файла для чтения и записи 
//	a+ - открытие текстового файла для чтения и записи с конца файла
//	rb - открытие двоичного файла для чтения
//	wb - открытие двоичного файла для записи. Файл будет перезаписан
//	b - открытие двоичного файла для добавления
//    r+b/b+ - открытие двоичного файла для чтения и записи без изменения размера
//	w+b/wb+ - открытие двоичного файла для чтения и записи
//	a+b/ab+ - открытие двоичного файла для чтения и записи с конца*/
//

}

