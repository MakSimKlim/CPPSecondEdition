// 230703 система контроля версий
//
// скв - централизованная (хранится на одном сервере) и децентрализованная (серверная и локальные версии кода, например git)
//
// git - бесплатный и с открытым кодом, достаточно быстрый и небольшой, написан на С, у него всегда есть бэкапы, очень низкие шансы потерять данные
// достаточно надежен, 
// 
// как он работает:
// 
// Репозиторий - сервер, котор хранит код.
// Кроме главного, есть локальный репозиторий, все изменения выполняются над локальной копией.
// В гит происходит следующее при заливке кода: в первую очередь есть зона (стэйджинг), куда вливаются данные из локального репозитория, затем КОМИТ (файлы добавляются в глдавный репозиторий), затем ПУШ
// итого 3 простанства где находится код: Стэйджинг-Комит-Пуш
// 
// Каждая версия файла представлена версией в бинарном виде, зашифрованный с помощью алгоритма (Блоб)
// 
// Деревья - пространства в котором работаем
// 
// Комит содержит указатель на родительский комит. Каждый комит хранит состояние версий от поздней до ранней
// 
// Ветви разработки (как минимум одна - МАСТЕР (или ТРАНК - ствол)). В процессе разработки от  мастера идут ветви. Код в стволе-мастере не влияет на код в ветках
// Ветки сферы применения: 
// 1) разработка фич енезависимо от главной версии: если код приваттный разрабатывается внутри большой компании (каждую новую фичу выносят в новую ветку, а затем доработанную ветку сливают с основным кодом ствола)
// коды в ветках не связаны, пока не сливается в стволе, можно работать с разными фичами, не боясь за рабочий основной код ствола и других веток
// 2) если нужно сделать специфичное решение для ваших задач, открывается ветка и в ней делается работа. Можно сделать её видимой и люди видят все изменения над проектом в ветках, если ветка понравится
// основнному программисту он может слить её с мастером
// 
// Хагин Фэйс - сайт для разработки ИИ (работает как гит хаб, работая через гит)
// 
// гит - программа (работает с разными сайтами)
// гит хаб - сайт
//
// Тэги - имя присвоенное конкретной версии репозитория (в отличие от ветки Тэг изменить нельзя (неизменная ветка))
// Тэги создаются для релизных версий
// для новой релизной версии создается новый Тэг
//
// Операции - клонирование (создает экземпляр репозитория (создает его копию))
//



#include <iostream>

int main()
{


}

